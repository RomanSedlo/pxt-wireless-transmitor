{"entries":[{"timestamp":1738569855801,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n"],[-1,"\n//radio.setFrequencyBand(0)\nradio.setTransmitPower(7)\nradio.setGroup(1)\nradio.setTransmitSerialNumber(false)\n\n"]],"start1":0,"start2":0,"length1":112,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"pt-only\""],[1,",\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":285,"start2":285,"length1":11,"length2":42}]}]},{"timestamp":1738570407445,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[1,"\n\n"],[0,"//radio."]],"start1":0,"start2":0,"length1":8,"length2":10},{"diffs":[[0,"oup("],[-1,"37"],[1,"1"],[0,")\nra"]],"start1":67,"start2":67,"length1":10,"length2":9},{"diffs":[[0,"e)\n\n"],[-1,"radio.sendNumber(0)\nradio.sendString(\"\")\nradio.sendValue(\"name\", 0)\n\nradio.onReceivedNumber(function(receivedNumber: number) {\n    \n})\nradio.onReceivedValue(function(name: string, value: number) {\n    \n})\nradio.onReceivedString(function(receivedString: string) {\n    \n})\n"]],"start1":108,"start2":108,"length1":275,"length2":4}]}]},{"timestamp":1738570946573,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"\": \"pxt-"],[1,"deleteme-temp"],[0,"\",\n    \""]],"start1":11,"start2":11,"length1":16,"length2":29}]}]},{"timestamp":1738572035711,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"pxt-"],[-1,"wireless"],[0,"\",\n "]],"start1":15,"start2":15,"length1":16,"length2":8}]}]},{"timestamp":1738572038194,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n})\n"],[-1,"\nlet avrglight: number = 0\n\nconst lightCalibrate: () => number = () => {\n    let svetlo = input.lightLevel()\n    let prumer: number = 0\n    for (let i: number = 0; i < 10; i = i + 1) {\n        prumer += svetlo\n        basic.pause(20)\n    }\n    return prumer = prumer / 10\n}\navrglight = lightCalibrate()\n\n\nenum StateC {\n    ready,\n    running,\n    finish\n}\nlet mode = StateC.ready\nmode = StateC.running\n\nif (mode === StateC.running){\n\n}\n\n\n\n\n\n"]],"start1":378,"start2":378,"length1":445,"length2":4}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"less"],[-1,"-transmitor"],[0,"\",\n "]],"start1":23,"start2":23,"length1":19,"length2":8}]}]},{"timestamp":1738572629853,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n\nenum S"],[-1,"TATE"],[1,"tateC"],[0," {\n    r"]],"start1":685,"start2":685,"length1":20,"length2":21},{"diffs":[[0," = S"],[-1,"TATE"],[1,"tateC"],[0,".ready"],[-1," as STATE\n "],[1,"\nmode = StateC.running\n"],[0,"\nif "]],"start1":746,"start2":746,"length1":29,"length2":42},{"diffs":[[0,"== S"],[-1,"TATE"],[1,"tateC"],[0,".run"]],"start1":795,"start2":795,"length1":12,"length2":13},{"diffs":[[0,"\n}\n\n"],[-1,"basic.showString(\"X\")\n"],[0,"\n\n\n\n"]],"start1":815,"start2":815,"length1":30,"length2":8}]}]},{"timestamp":1738573271048,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"nning){\n"],[-1,"    "],[0,"\n}\n\nbasi"]],"start1":792,"start2":792,"length1":20,"length2":16}]}]},{"timestamp":1738573287699,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"itPower("],[-1,"3"],[1,"7"],[0,")\nradio."]],"start1":43,"start2":43,"length1":17,"length2":17},{"diffs":[[0,"E\n \n"],[-1,"\n\n\n\nif (mode === STATE.ready){\n    radio.onReceivedValue(function (name: \"state\", value: 1) {\n\n    })\n}\n\nif (mode === STATE.running){\n    if (input.lightLevel() + 20 < avrglight) {\n        let zavod = 2\n        radio.sendValue(\"state\", zavod)\n    }\n}\n\nif (mode === STATE.finish){\n    radio.onReceivedValue(function (name: \"state\", value: 3) {\n        basic.showNumber(runtime)\n    })"],[1,"if (mode === STATE.running){\n    "],[0,"\n}\n\n"]],"start1":767,"start2":767,"length1":391,"length2":41}]}]},{"timestamp":1738573832382,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"dNumber(function"],[-1," "],[0,"(receivedNumber:"]],"start1":195,"start2":195,"length1":33,"length2":32},{"diffs":[[0,"mber: number) {\n"],[1,"    "],[0,"\n})\nradio.onRece"]],"start1":222,"start2":222,"length1":32,"length2":36},{"diffs":[[0,"lue(function"],[-1," "],[0,"(name: strin"]],"start1":264,"start2":264,"length1":25,"length2":24},{"diffs":[[0,": number) {\n"],[1,"    "],[0,"\n})\nradio.on"]],"start1":296,"start2":296,"length1":24,"length2":28},{"diffs":[[0,"function"],[-1," "],[0,"(receive"]],"start1":339,"start2":339,"length1":17,"length2":16},{"diffs":[[0,": string) {\n"],[1,"    "],[0,"\n})\n\nlet avr"]],"start1":362,"start2":362,"length1":24,"length2":28},{"diffs":[[0," / 10\n}\n"],[-1,"\n"],[0,"avrgligh"]],"start1":648,"start2":648,"length1":17,"length2":16},{"diffs":[[0,"rate()\n\n"],[1,"\n"],[0,"enum STA"]],"start1":678,"start2":678,"length1":16,"length2":17},{"diffs":[[0,"ATE\n"],[-1,"\nlet runtime: number\n\nbasic.forever(() => {\n    "],[1," \n\n\n\n\n"],[0,"if ("]],"start1":765,"start2":765,"length1":56,"length2":14},{"diffs":[[0,"ady)"],[-1," "],[0,"{\n    "],[-1,"    basic.showString(\"X\")"],[1,"radio.onReceivedValue(function (name: \"state\", value: 1) {\n"],[0,"\n    }"],[-1,"\n    "],[1,")\n}\n\n"],[0,"if ("]],"start1":796,"start2":796,"length1":51,"length2":84},{"diffs":[[0,"running)"],[-1," "],[0,"{\n"],[-1,"    "],[0,"    if ("]],"start1":895,"start2":895,"length1":23,"length2":18},{"diffs":[[0,"ight) {\n    "],[1,"    let zavod = 2\n"],[0,"        radi"]],"start1":944,"start2":944,"length1":24,"length2":42},{"diffs":[[0,"e\", "],[-1,"2)\n        }\n    }\n    "],[1,"zavod)\n    }\n}\n\n"],[0,"if ("]],"start1":1003,"start2":1003,"length1":31,"length2":24},{"diffs":[[0,"ish)"],[-1," {\n"],[1,"{"],[0,"\n    "],[-1,"}\n}\n)\n\n"],[0,"radi"]],"start1":1045,"start2":1045,"length1":23,"length2":14},{"diffs":[[0,"ue: "],[-1,"1"],[1,"3"],[0,") {\n"],[-1,"\n})\n\nradio.onReceivedValue(function (name: \"state\", value: 3) {\n"],[1,"    "],[0,"    "]],"start1":1105,"start2":1105,"length1":77,"length2":17},{"diffs":[[0,"untime)\n"],[1,"    })\n"],[0,"}"],[-1,")"],[0,"\n\nbasic."]],"start1":1140,"start2":1140,"length1":18,"length2":24}]}]},{"timestamp":1738574520363,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," {\n\n})\n\n"],[-1,"\n"],[0,"radio.on"]],"start1":1114,"start2":1114,"length1":17,"length2":16}]}]},{"timestamp":1738574521565,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    "],[-1,"switch(mode) {\n        case"],[1,"if (mode ==="],[0," STA"]],"start1":804,"start2":804,"length1":35,"length2":20},{"diffs":[[0,"TE.ready"],[-1,":\n    "],[1,") {\n"],[0,"        "]],"start1":824,"start2":824,"length1":22,"length2":20},{"diffs":[[0,"    "],[-1,"   "],[-1,"     break;\n        case"],[1,"}\n    if (mode ==="],[0," STA"]],"start1":866,"start2":866,"length1":35,"length2":26},{"diffs":[[0,"ning"],[-1,":\n    "],[1,") {\n"],[0,"    "]],"start1":898,"start2":898,"length1":14,"length2":12},{"diffs":[[0,"        "],[-1,"    "],[0,"radio.se"]],"start1":961,"start2":961,"length1":20,"length2":16},{"diffs":[[0,"    "],[-1,"    "],[0,"}\n    "],[-1,"        break;\n        case STATE.finish:\n\n            break;\n    "],[1,"}\n    if (mode === STATE.finish) {\n\n    }\n"],[0,"}\n"],[-1,"}"],[0,")\n\nr"]],"start1":1001,"start2":1001,"length1":87,"length2":58},{"diffs":[[0,"ame:"],[-1," string, value: number) {\n    if (name ==="],[0," \"state\""],[-1," &&"],[1,","],[0," value"],[-1," === 2) {\n\n    }"],[1,": 1) {\n"],[0,"\n})\n\n"],[1,"\n"],[0,"radi"]],"start1":1091,"start2":1091,"length1":88,"length2":36},{"diffs":[[0,"function (name: "],[1,"\""],[0,"st"],[-1,"ring"],[1,"ate\""],[0,", value: number)"]],"start1":1145,"start2":1145,"length1":38,"length2":39},{"diffs":[[0,"ue: "],[-1,"number"],[1,"3"],[0,") {\n    "],[-1,"if (name === \"state\" && value === 2) {\n        "],[1,"basic.showNumber(runtime)\n})\n\n"],[0,"basi"]],"start1":1173,"start2":1173,"length1":69,"length2":47},{"diffs":[[0,"X\")\n"],[-1,"    }\n})\n\n\n\n"],[0,"\n\n\n\n"]],"start1":1234,"start2":1234,"length1":20,"length2":8}]}]},{"timestamp":1738575112720,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"finish:\n"],[-1,"            "],[0,"\n       "]],"start1":1081,"start2":1081,"length1":28,"length2":16},{"diffs":[[0,"g(\"X\")\n    }\n})\n"],[1,"\n\n\n\n\n\n\n"]],"start1":1365,"start2":1365,"length1":16,"length2":23}]}]},{"timestamp":1738575156931,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"false)\n\n"],[1,"radio.sendNumber(0)\nradio.sendString(\"\")\nradio.sendValue(\"name\", 0)\n\nradio.onReceivedNumber(function (receivedNumber: number) {\n\n})\nradio.onReceivedValue(function (name: string, value: number) {\n\n})\nradio.onReceivedString(function (receivedString: string) {\n\n})\n\n"],[0,"let avrg"]],"start1":103,"start2":103,"length1":16,"length2":279},{"diffs":[[0,"  switch"],[-1," "],[0,"(mode) {"]],"start1":806,"start2":806,"length1":17,"length2":16},{"diffs":[[0,"ng(\""],[-1,"Ready"],[1,"X"],[0,"\")\n "]],"start1":875,"start2":875,"length1":13,"length2":9},{"diffs":[[0," 2)\n"],[-1,"                let mode = STATE.finish\n"],[0,"    "]],"start1":1025,"start2":1025,"length1":48,"length2":8},{"diffs":[[0,"    "],[-1,"basic.showNumber(runtime)\n            if (input.buttonIsPressed(Button.A)) {\n                let mode = STATE.ready\n            }"],[0,"\n   "]],"start1":1097,"start2":1097,"length1":137,"length2":8},{"diffs":[[0,"=== "],[-1,"1"],[1,"2"],[0,") {\n"],[-1,"        let mode = STATE.running"],[0,"\n   "]],"start1":1228,"start2":1228,"length1":45,"length2":13},{"diffs":[[0,"== \""],[-1,"runtime\") {\n        let runtime = value"],[1,"state\" && value === 2) {\n        basic.showString(\"X\")"],[0,"\n   "]],"start1":1325,"start2":1325,"length1":47,"length2":62}]}]},{"timestamp":1739779339282,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"        "],[1,"let "],[0,"mode = S"]],"start1":1148,"start2":1148,"length1":16,"length2":20}]}]},{"timestamp":1739779674938,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"                "],[1,"let "],[0,"mode = STATE.fin"]],"start1":771,"start2":771,"length1":32,"length2":36},{"diffs":[[0,"    "],[-1,"radio.sendValue(\"state\", 0)\n               "],[1,"let"],[0," mod"]],"start1":972,"start2":972,"length1":51,"length2":11},{"diffs":[[0,"        "],[1,"let "],[0,"runtime "]],"start1":1280,"start2":1280,"length1":16,"length2":20},{"diffs":[[0,"\n})\n"],[-1,"\nradio.onReceivedValue(function (name: string, value: number) {\n    if (name === \"state\" && value === 0) {\n        mode = STATE.ready\n    }\n})"]],"start1":1313,"start2":1313,"length1":146,"length2":4}]}]},{"timestamp":1739780497300,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":219,"start2":219,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"},{"type":"added","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>"}]}],"snapshots":[{"timestamp":1738569855800,"editorVersion":"7.0.57","text":{"main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"pxt-deleteme-temp\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\",\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1738573895070,"editorVersion":"7.0.57","text":{"main.ts":"//radio.setFrequencyBand(0)\nradio.setTransmitPower(3)\nradio.setGroup(37)\nradio.setTransmitSerialNumber(false)\n\nradio.sendNumber(0)\nradio.sendString(\"\")\nradio.sendValue(\"name\", 0)\n\nradio.onReceivedNumber(function(receivedNumber: number) {\n    \n})\nradio.onReceivedValue(function(name: string, value: number) {\n    \n})\nradio.onReceivedString(function(receivedString: string) {\n    \n})\n\nlet avrglight: number = 0\n\nconst lightCalibrate: () => number = () => {\n    let svetlo = input.lightLevel()\n    let prumer: number = 0\n    for (let i: number = 0; i < 10; i = i + 1) {\n        prumer += svetlo\n        basic.pause(20)\n    }\n    return prumer = prumer / 10\n}\navrglight = lightCalibrate()\n\n\nenum STATE {\n    ready,\n    running,\n    finish\n}\nlet mode = STATE.ready as STATE\n \n\n\n\n\nif (mode === STATE.ready){\n    radio.onReceivedValue(function (name: \"state\", value: 1) {\n\n    })\n}\n\nif (mode === STATE.running){\n    if (input.lightLevel() + 20 < avrglight) {\n        let zavod = 2\n        radio.sendValue(\"state\", zavod)\n    }\n}\n\nif (mode === STATE.finish){\n    radio.onReceivedValue(function (name: \"state\", value: 3) {\n        basic.showNumber(runtime)\n    })\n}\n\nbasic.showString(\"X\")\n\n\n\n\n","README.md":"","pxt.json":"{\n    \"name\": \"pxt-wireless-transmitor\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}},{"timestamp":1739779339282,"editorVersion":"7.0.57","text":{"main.ts":"//radio.setFrequencyBand(0)\nradio.setTransmitPower(3)\nradio.setGroup(37)\nradio.setTransmitSerialNumber(false)\n\nradio.sendNumber(0)\nradio.sendString(\"\")\nradio.sendValue(\"name\", 0)\n\nradio.onReceivedNumber(function (receivedNumber: number) {\n\n})\nradio.onReceivedValue(function (name: string, value: number) {\n\n})\nradio.onReceivedString(function (receivedString: string) {\n\n})\n\nlet avrglight: number = 0\n\nconst lightCalibrate: () => number = () => {\n    let svetlo = input.lightLevel()\n    let prumer: number = 0\n    for (let i: number = 0; i < 10; i = i + 1) {\n        prumer += svetlo\n        basic.pause(20)\n    }\n    return prumer = prumer / 10\n}\n\navrglight = lightCalibrate()\n\nenum STATE {\n    ready,\n    running,\n    finish\n}\nlet mode = STATE.ready as STATE\n\nlet runtime: number\n\nbasic.forever(() => {\n    switch(mode) {\n        case STATE.ready:\n            basic.showString(\"X\")\n            break;\n        case STATE.running:\n            if (input.lightLevel() + 20 < avrglight) {\n                radio.sendValue(\"state\", 2)\n            }\n            break;\n        case STATE.finish:\n            \n            break;\n    }\n})\n\nradio.onReceivedValue(function (name: string, value: number) {\n    if (name === \"state\" && value === 2) {\n\n    }\n})\n\nradio.onReceivedValue(function (name: string, value: number) {\n    if (name === \"state\" && value === 2) {\n        basic.showString(\"X\")\n    }\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"pxt-wireless-transmitor\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}}],"shares":[],"lastSaveTime":1739780497304}